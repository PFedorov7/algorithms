Глава 4

Быстрая сортировка

Столкнувшись с новой задачей, не впадайте в ступор. Вместо этого спросите себя: «А нельзя ли решить эту задачу, применив стратегию "разделяй и властвуй"? Алгоритмы на базе этой стратегии яв­ляются рекурсивными.

Как работает стратегия разделяй и властвуй: 
1. Определите простейший случаи  как базовый.
2. Придумайте,как свести задачу к базовому случаю.

Когда вы пишете рекурсивную функцию, в которой задействован массив, ба­ зовым случаем часто оказывается пустой массив или массив из одного эле­ мента. Если вы не знаете, с чего начать, - начните с этого.

Алгоритм быстрой сортировки работает так: 
1. Cначала в массиве выбирается элемент, который называется опорным.
2. Теперь мы находим элементы, меньшие опорного, и элементы, большие опорного.
3. Применяем функцию qsort() пока не достигнем базового случая

Алгоритм быстрой сортировки уникален тем, что его скорость зависит от выбора опорного элемента.
У бы­строй сортировки константа меньше, чем у сортировки слиянием, поэтому, несмотря на то что оба алгоритма характеризуются временем О(п log п), быстрая сортировка работает быстрее. А на практике быстрая сортировка работает быстрее, потому что средний случай встречается намного чаще худшего.

В этом примере существуют O(log п) (с технической точки зрения пра­ вильнее сказать «высота стека вызовов равна O(log n)») уровней. А так как каждый уровень занимает время О(п), то весь алгоритм займет время О(п) * O(log п) = О(п log п). Это сценарий лучшего случая. В худшем случае существуют О(п) уровней, поэтому алгоритм займет время О(п)* О(п) = О(п2).

Если вы реализуете алгоритм быстрой сортировки, выберите в качестве опорного случайный элемент.